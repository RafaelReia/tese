Refactoring Tool work flow: (add a brief explanation of what does )

Syntax-Parse Utility


Online comp Vs Check Syntax Hello
we do not know what calls the online sytax expander, and for
now we can not find a way of passing the information back to the gui.rkt from
the online-comp.rkt / code-walker.rkt. This happens because a new instance is
created of the online-comp.rkt / code-walker.rkt which does not "share" the
values of other instances *duhh*. Having an instance of gui.rkt in
online-comp.rkt / code-walker.rkt does not work either because we can not have 2
instances of the same thing running at the same time.

Possible solutions:
Write to a file
Find out what is calling/starting the handler and get the results from there (??)
 => Use Check Syntax Button


 The last one was chosen because the others failed, either because we wasn't able
 to store syntax objects in a file (in a "small" number of time) or because we
 could not find what is calling that (in a "small" number of time).

 We want to put that working *automatically*, we Have two options:
 Fix the problem
 Automate the "call" to the check syntax button

Expanded Program Vs Not expanded Program
#Talk about difficulty, durability, Python (other languages)

[Only in the expanded form] (and) is treated like an if which is bad and give problems
The rest tends to work.
Testando:
(if (= (+ 1 2) 1) #f #t) to (not (= (+ 1 2) 1))

#add an example of both to compare

 Sub Cap Code with Macros The Problem

Semantic problem (E.g. (and (< 1 (foo 2)) (< (foo 2) 3)) )

Pretty Printing (E.g. Cond lets etc)

Implemented Refactoring Operations

Refactoring Let to Defines Usefulness Vs implementation difficulty

Refactoring Define to Let Usefulness Vs Implementation difficulty

Case Study: (find one)
